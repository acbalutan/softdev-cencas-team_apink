/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.67
 * Generated at: 2016-02-26 11:34:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.*;
import java.util.*;
import java.sql.*;
import bean.PileBean;

public final class pile_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta charset=\"utf-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    \r\n");
      out.write("\t<link type=\"text/css\" rel=\"stylesheet\" href=\"bootstrap/bootstrap.min.css\">\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"bootstrap/js/bootstrap.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"col-md-6\" style=\"position: absolute; top: 15%; left: 25%;\">\r\n");
      out.write("<TABLE class=\"table table-striped\">\r\n");
      out.write("                \r\n");


java.io.BufferedReader bf = new java.io.BufferedReader(new java.io.FileReader("D:/Eclipse/db/textfiles/votes.txt")); 
	String lineRead = new String (); 
	
	try {
		while ((lineRead = bf.readLine()) != null) 
		{ 
			if(lineRead.equals(""))
			{ 
				continue; 
			} 
			else 
			{ 
				if(lineRead.startsWith("Candidacy")) 
				{ 
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<TR>\r\n");
      out.write("          \t  \t\t\t<TH style=\"text-align: left;\">START OF CANDIDATE</TH>\r\n");
      out.write("                   \t\t<TD></TD>\r\n");
      out.write("                   \t</TR>\r\n");
      out.write("\t\t\t\t\t<TR>\r\n");
      out.write("          \t  \t\t\t<TD>Candidacy:</TD>\r\n");
      out.write("                   \t\t<TD> ");
      out.print( lineRead.substring(11) );
      out.write(" </TD>\r\n");
      out.write("                   \t</TR>\r\n");
      out.write("\t\t\t\t\t");

				} 
			else if(lineRead.startsWith("Name")) 
			{ 
					
      out.write("\t\r\n");
      out.write("\t\t\t\t\t<TR>\r\n");
      out.write("          \t  \t\t\t<TD>Name:</TD>\r\n");
      out.write("                   \t\t<TD> ");
      out.print( lineRead.substring(6) );
      out.write(" </TD>\r\n");
      out.write("                   \t</TR>\r\n");
      out.write("\t\t\t\t\t");

			} 
			else if(lineRead.startsWith("Votes")) 
			{ 	
					
      out.write("\t\r\n");
      out.write("\t\t\t\t\t<TR>\r\n");
      out.write("          \t  \t\t\t<TD>Votes:</TD>\r\n");
      out.write("                   \t\t<TD> ");
      out.print( lineRead.substring(7) );
      out.write(" </TD>\r\n");
      out.write("                   \t</TR>\r\n");
      out.write("\t\t\t\t\t");

			}
			else if(lineRead.startsWith("Sender IP"))
			{
				
      out.write("\t\r\n");
      out.write("\t\t\t\t<TR>\r\n");
      out.write("      \t  \t\t\t<TD>Sender IP:</TD>\r\n");
      out.write("               \t\t<TD> ");
      out.print( lineRead.substring(11) );
      out.write(" </TD>\r\n");
      out.write("               \t</TR>\r\n");
      out.write("\t\t\t\t");

			}
			else if (lineRead.startsWith("Sender MAC Address"))
			{
				
      out.write("\t\r\n");
      out.write("\t\t\t\t<TR>\r\n");
      out.write("      \t  \t\t\t<TD>Sender MAC Address:</TD>\r\n");
      out.write("               \t\t<TD> ");
      out.print( lineRead.substring(20) );
      out.write(" </TD>\r\n");
      out.write("               \t</TR>\r\n");
      out.write("\t\t\t\t");

			}
			else if (lineRead.startsWith("Sender Latitude"))
			{
				
      out.write("\t\r\n");
      out.write("\t\t\t\t<TR>\r\n");
      out.write("      \t  \t\t\t<TD>Sender Latitude:</TD>\r\n");
      out.write("               \t\t<TD> ");
      out.print( lineRead.substring(17) );
      out.write(" </TD>\r\n");
      out.write("               \t</TR>\r\n");
      out.write("               \t\r\n");
      out.write("\t\t\t\t");

			}
			else if (lineRead.startsWith("Sender Longitude"))
			{
				
      out.write("\t\r\n");
      out.write("\t\t\t\t<TR>\r\n");
      out.write("      \t  \t\t\t<TD>Sender Longitude:</TD>\r\n");
      out.write("               \t\t<TD> ");
      out.print( lineRead.substring(17) );
      out.write(" </TD>\r\n");
      out.write("               \t</TR>\r\n");
      out.write("               \t\r\n");
      out.write("\t\t\t\t");

			}
			else if (lineRead.startsWith("Timestamp"))
			{
				
      out.write("\r\n");
      out.write("\t\t\t\t<TR>\r\n");
      out.write("      \t  \t\t\t<TD>Timestamp:</TD>\r\n");
      out.write("               \t\t<TD> ");
      out.print( lineRead.substring(11) );
      out.write(" </TD>\r\n");
      out.write("               \t</TR>\r\n");
      out.write("               \t<TR>\r\n");
      out.write("               \t\t<TD></TD>\r\n");
      out.write("               \t\t<TH style=\"text-align: right;\">END OF CANDIDATE</TH>\r\n");
      out.write("               \t</TR>\r\n");
      out.write("               \t<TR>\r\n");
      out.write("               \t\t<TD></TD>\r\n");
      out.write("               \t\t<TD></TD>\r\n");
      out.write("               \t</TR>\r\n");
      out.write("\t\t\t\t");

			}
			else if (lineRead.startsWith("Precinct"))
			{
			
					
      out.write("\t\r\n");
      out.write("\t\t\t\t\t<TR>\r\n");
      out.write("\t      \t  \t\t\t<TD>Precinct:</TD>\r\n");
      out.write("\t               \t\t<TD> ");
      out.print( lineRead.substring(10) );
      out.write(" </TD>\r\n");
      out.write("\t               \t</TR>\r\n");
      out.write("\t               \t\r\n");
      out.write("\t\t\t\t\t");

			
			}
			else if (lineRead.startsWith("City"))
			{
				
					
      out.write("\t\r\n");
      out.write("\t\t\t\t\t<TR>\r\n");
      out.write("\t      \t  \t\t\t<TD>City:</TD>\r\n");
      out.write("\t               \t\t<TD> ");
      out.print( lineRead.substring(6) );
      out.write(" </TD>\r\n");
      out.write("\t               \t</TR>\r\n");
      out.write("\t               \t\r\n");
      out.write("\t\t\t\t\t");

				
			}
			else if (lineRead.startsWith("District"))
			{
				
      out.write("\t\r\n");
      out.write("\t\t\t\t<TR>\r\n");
      out.write("      \t  \t\t\t<TD>District:</TD>\r\n");
      out.write("               \t\t<TD> ");
      out.print( lineRead.substring(10) );
      out.write(" </TD>\r\n");
      out.write("               \t</TR>\r\n");
      out.write("\t\t\t\t");

			}
			else if (lineRead.startsWith("Province"))
			{
				
      out.write("\t\r\n");
      out.write("\t\t\t\t<TR>\r\n");
      out.write("      \t  \t\t\t<TD>Province:</TD>\r\n");
      out.write("               \t\t<TD> ");
      out.print( lineRead.substring(10) );
      out.write(" </TD>\r\n");
      out.write("               \t</TR>\r\n");
      out.write("\t\t\t\t");

			}
			else if (lineRead.startsWith("Region"))
			{
				
      out.write("\t\r\n");
      out.write("\t\t\t\t<TR>\r\n");
      out.write("      \t  \t\t\t<TD>Region:</TD>\r\n");
      out.write("               \t\t<TD> ");
      out.print( lineRead.substring(8) );
      out.write(" </TD>\r\n");
      out.write("               \t</TR>\r\n");
      out.write("\t\t\t\t");

			}
			} 
			
			
      out.write("\r\n");
      out.write("\t\t\t");

			
		} 
	
		bf.close();
	}
	catch (Exception e) { 
		e.printStackTrace(); 
	}

      out.write("\r\n");
      out.write("</TABLE>\r\n");
      out.write("</div>\r\n");
      out.write("\t<div style=\"position: absolute; top: 8.65em; left: 87em;\">\r\n");
      out.write("\t\t\t<form action=\"AcceptToDb.jsp\">\r\n");
      out.write("\t\t\t\t<button type=\"submit\" class=\"btn btn-success\">Accept</button>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t\t<form action=\"SendEmail.jsp\">\r\n");
      out.write("\t\t\t\t<button type=\"submit\" class=\"btn btn-danger\">Reject</button>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div style=\"position: absolute; top: 8.70em; left: 19em;\">\r\n");
      out.write("\t\t\t<form action=\"profile.jsp\">\r\n");
      out.write("\t\t\t\t<button type=\"submit\" class=\"btn btn-primary\">Back to Profile</button>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<script src=\"bootstrap/jquery.min.js\"></script>\r\n");
      out.write("    <script>window.jQuery || document.write('<script src=\"bootstrap/jquery.min.js\"><\\/script>')</script>\r\n");
      out.write("    <script src=\"bootstrap/bootstrap.min.js\"></script>\r\n");
      out.write("    <script src=\"bootstrap/docs.min.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
