/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.67
 * Generated at: 2016-02-26 22:32:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.net.*;
import java.text.*;
import java.util.Date;
import bean.LoginDao;

public final class AcceptToDb_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	LoginDao.closeCon();

	java.io.BufferedReader bf = new java.io.BufferedReader(new java.io.FileReader("D:/Eclipse/db/textfiles/votes.txt")); 
	String lineRead = new String (); 
	InetAddress ip = null;
	StringBuilder sb = new StringBuilder();
	Date myDate = new Date();
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
	String myDateString = sdf.format(myDate);
		
	try {	
		
		ip = InetAddress.getLocalHost();		
		NetworkInterface network = NetworkInterface.getByInetAddress(ip);
			
		byte[] mac = network.getHardwareAddress();
			
		for (int i = 0; i < mac.length; i++) {
			sb.append(String.format("%02X%s", mac[i], (i < mac.length - 1) ? "-" : ""));		
		}
			
	} catch (UnknownHostException e) {	
		e.printStackTrace();	
	} catch (SocketException e){			
		e.printStackTrace();			
	}
	
	String candidacy = null,name = null,vote = null,level = null,precinct = null,city = null, timestamp = null;
	String district = null,province = null,region = null,latitude = null,longitude = null, ipadd = null, mac = null;
	
	Class.forName("org.sqlite.JDBC");
	Connection conn = DriverManager.getConnection("jdbc:sqlite:D:/Eclipse/db/aes.db");
	PreparedStatement prep = conn.prepareStatement("insert into tapat values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);");

	try {
		while ((lineRead = bf.readLine()) != null) 
		{ 		
				//if(candidacy != null && name != null && vote != null && level != null && precinct != null && city != null && district != null && province != null && region != null && latitude != null && longitude != null){
					
					if(lineRead.startsWith("Candidacy"))
					{
						candidacy = lineRead.substring(11);
						lineRead = bf.readLine();
					} 
					if(lineRead.startsWith("Name"))
					{
						name = lineRead.substring(6);
						lineRead = bf.readLine();
					} 
					if(lineRead.startsWith("Votes"))
					{
						vote = lineRead.substring(7);
						lineRead = bf.readLine();
					}
					if(lineRead.startsWith("Sender level"))
					{
						level = lineRead.substring(14);
						lineRead = bf.readLine();
					}
					if (lineRead.startsWith("Precinct"))
					{
						precinct = lineRead.substring(10);
						lineRead = bf.readLine();
					}
					if (lineRead.startsWith("City"))
					{
						city = lineRead.substring(6);
						lineRead = bf.readLine();
					}
					if (lineRead.startsWith("District"))
					{
						district = lineRead.substring(10);
						lineRead = bf.readLine();
					}
					if (lineRead.startsWith("Province"))
					{
						province = lineRead.substring(10);
						lineRead = bf.readLine();
					}
					if (lineRead.startsWith("Region"))
					{
						region = lineRead.substring(8);
						lineRead = bf.readLine();
					}
					if(lineRead.startsWith("Sender IP"))
					{
						ipadd = lineRead.substring(11);
						lineRead = bf.readLine();
					}
					if (lineRead.startsWith("Sender MAC Address"))
					{
						mac = lineRead.substring(20);
						lineRead = bf.readLine();
					}
					if (lineRead.startsWith("Sender Latitude"))
					{
						latitude = lineRead.substring(17);
						lineRead = bf.readLine();
					}
					if (lineRead.startsWith("Sender Longitude"))
					{
						longitude =lineRead.substring(18);
						lineRead = bf.readLine();
					}
					if (lineRead.startsWith("Timestamp"))
					{
						timestamp = lineRead.substring(11);
					}
				//}
			
			try {
		        
				//if(candidacy != null && name != null && vote != null && level != null && precinct != null && city != null && district != null && province != null && region != null && latitude != null && longitude != null && ipadd != null && mac  != null && timestamp != null){
		        prep.setString(1, candidacy); //candidacy
				prep.setString(2, name); //name
				prep.setString(3, vote); //votes
				prep.setString(4, level); //sender level
				prep.setString(5, precinct); //precinct
				prep.setString(6, city); //city
				prep.setString(7, district); //district
				prep.setString(8, province); //province
				prep.setString(9, region); //region
				prep.setString(10, ipadd); //ipadd
				prep.setString(11, mac); //mac
				prep.setString(12, latitude); //latitude
				prep.setString(13, longitude); //longitude
				prep.setString(14, timestamp); //timestamp
				
				prep.addBatch();				
				conn.setAutoCommit(false);
				prep.executeBatch();
		        conn.setAutoCommit(true);
				// }
				
		    } catch (SQLException e ) {
		        if (conn!=null) {
		            try {
		                conn.rollback();
		            } catch(SQLException excep) {}
		        }
		    }finally {
		        if (prep!=null) {
		        	prep.close();
		        }
		       if(conn!=null){
		          conn.close();
		        }
		   }
		}
	}
	catch (UnknownHostException e) {					
		e.printStackTrace();				
	}



      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<META http-equiv=\"refresh\" content=\"2;URL=index.jsp\">\r\n");
      out.write("<title>Accept</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<p>Saving to database...</p>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
